"""
pages/crud_usuarios.py

Tela CRUD para gerenciamento de usu√°rios (somente ADMIN).

Funcionalidades:
- Listar usu√°rios existentes.
- Criar novos usu√°rios com senha segura.
- Editar usu√°rios cadastrados.
- Excluir usu√°rios com confirma√ß√£o.
"""

import sys
import os
import io

# Adiciona o diret√≥rio raiz ao sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

import streamlit as st
import bcrypt
from database.models.models_usuarios import (
    get_all_usuarios, create_usuario, update_usuario, delete_usuario
)
from services.auth_service import get_user_by_token
from services.google_drive_service import upload_file_to_drive

# üìå ID da pasta CNHs no Google Drive
CNH_FOLDER_ID = "1cTg0fV0VgzHKM23evhTf93SXHRu3ojjG"

# Aplicando o CSS personalizado
st.markdown('<link rel="stylesheet" href="/static/css/styles.css">', unsafe_allow_html=True)

# ==============================
# üõë Verifica√ß√£o de Permiss√£o (Apenas ADMIN)
# ==============================
if "token" not in st.session_state:
    st.warning("‚ö†Ô∏è Voc√™ precisa estar logado para acessar esta p√°gina.")
    st.stop()

usuario_logado = get_user_by_token(st.session_state["token"])

if not usuario_logado or usuario_logado["tipo"] != "ADMIN":
    st.warning("üö´ Acesso negado! Apenas administradores podem gerenciar usu√°rios.")
    st.stop()

st.markdown("<h2 style='text-align: center;'>üë§ Gerenciamento de Usu√°rios</h2>", unsafe_allow_html=True)

# ==============================
# üîπ Formul√°rio para Criar Novo Usu√°rio
# ==============================
with st.expander("‚ûï Adicionar Novo Usu√°rio"):
    with st.form("form_novo_usuario"):
        nome = st.text_input("Nome Completo", placeholder="Digite o nome")
        email = st.text_input("E-mail", placeholder="exemplo@email.com")
        cpf = st.text_input("CPF", placeholder="Somente n√∫meros")
        data_nascimento = st.date_input("Data de Nascimento")
        funcao = st.text_input("Fun√ß√£o", placeholder="Ex.: Supervisor de Frotas")
        empresa = st.text_input("Empresa", placeholder="Nome da empresa")
        tipo = st.selectbox("Tipo de Usu√°rio", ["ADMIN", "OPE"])
        senha = st.text_input("Senha", type="password", placeholder="Defina uma senha segura")
        foto_cnh = st.file_uploader("Foto da CNH (opcional)", type=["jpg", "png", "jpeg", "pdf"])

        if st.form_submit_button("Salvar Usu√°rio"):
            if nome and email and cpf and senha:
                # Gerando hash da senha
                senha_hash = bcrypt.hashpw(senha.encode(), bcrypt.gensalt()).decode()

                # Upload da CNH para o Google Drive (se fornecida)
                cnh_drive_link = None
                if foto_cnh:
                    try:
                        file_bytes = io.BytesIO(foto_cnh.read())  # Criar objeto BytesIO
                        upload_result = upload_file_to_drive(
                            file_bytes=file_bytes,  # Passando o objeto BytesIO diretamente
                            filename=foto_cnh.name,
                            mime_type="image/jpeg",
                            folder_id=CNH_FOLDER_ID
                        )
                        if upload_result and "id" in upload_result:
                            cnh_drive_link = f"https://drive.google.com/file/d/{upload_result['id']}/view"
                    except Exception as e:
                        st.error(f"‚ùå Erro ao enviar CNH para o Google Drive: {e}")


                # Criar usu√°rio sem o campo extra caso ele n√£o exista na fun√ß√£o create_usuario
                if cnh_drive_link:
                    create_usuario(nome, email, cpf, data_nascimento, funcao, empresa, tipo, senha_hash, cnh_drive_link)
                else:
                    create_usuario(nome, email, cpf, data_nascimento, funcao, empresa, tipo, senha_hash)

                st.success("‚úÖ Usu√°rio cadastrado com sucesso!")
                st.rerun()
            else:
                st.error("‚ö†Ô∏è Todos os campos obrigat√≥rios devem ser preenchidos.")

# ==============================
# üìå Listagem de Usu√°rios
# ==============================
st.subheader("üìã Usu√°rios Cadastrados")

usuarios = get_all_usuarios()

if not usuarios:
    st.info("üîπ Nenhum usu√°rio cadastrado.")
else:
    for usuario in usuarios:
        with st.expander(f"{usuario['nome']} ({usuario['tipo']})"):
            col1, col2 = st.columns(2)

            with col1:
                st.text(f"üìß E-mail: {usuario['email']}")
                st.text(f"üìå Fun√ß√£o: {usuario['funcao']}")
                st.text(f"üè¢ Empresa: {usuario['empresa']}")
                st.text(f"üÜî CPF: {usuario['cpf']}")

            with col2:
                cnh_foto = usuario.get("cnh_foto", None)  # Certifique-se de que a chave est√° correta
                if cnh_foto:
                    st.markdown(f"[üìÑ Visualizar CNH]({cnh_foto})", unsafe_allow_html=True)

            # Bot√µes de A√ß√£o
            col1, col2 = st.columns(2)

            with col1:
                if st.button("‚úèÔ∏è Editar", key=f"edit_{usuario['id']}"):
                    with st.form(f"form_edit_{usuario['id']}"):
                        novo_nome = st.text_input("Nome", value=usuario["nome"])
                        nova_funcao = st.text_input("Fun√ß√£o", value=usuario["funcao"])
                        nova_empresa = st.text_input("Empresa", value=usuario["empresa"])
                        novo_tipo = st.selectbox("Tipo de Usu√°rio", ["ADMIN", "OPE"], index=["ADMIN", "OPE"].index(usuario["tipo"]))

                        if st.form_submit_button("Salvar Altera√ß√µes"):
                            update_usuario(usuario["id"], novo_nome, nova_funcao, nova_empresa, novo_tipo)
                            st.success("‚úÖ Usu√°rio atualizado com sucesso!")
                            st.rerun()

            with col2:
                if st.button("üóëÔ∏è Excluir", key=f"delete_{usuario['id']}"):
                    delete_usuario(usuario["id"])
                    st.success("‚úÖ Usu√°rio exclu√≠do com sucesso!")
                    st.rerun()

# ==============================
# üîπ Rodap√©
# ==============================
st.markdown("<p class='footer'>¬© 2024 Fleet Management</p>", unsafe_allow_html=True)
